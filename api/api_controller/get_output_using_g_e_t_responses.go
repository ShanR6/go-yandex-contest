// Code generated by go-swagger; DO NOT EDIT.

package api_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetOutputUsingGETReader is a Reader for the GetOutputUsingGET structure.
type GetOutputUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutputUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutputUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetOutputUsingGETNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOutputUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutputUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutputUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOutputUsingGETOK creates a GetOutputUsingGETOK with default headers values
func NewGetOutputUsingGETOK() *GetOutputUsingGETOK {
	return &GetOutputUsingGETOK{}
}

/* GetOutputUsingGETOK describes a response with status code 200, with default header values.

Successfully received output file
*/
type GetOutputUsingGETOK struct {
	Payload strfmt.Base64
}

func (o *GetOutputUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/output][%d] getOutputUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetOutputUsingGETOK) GetPayload() strfmt.Base64 {
	return o.Payload
}

func (o *GetOutputUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputUsingGETNoContent creates a GetOutputUsingGETNoContent with default headers values
func NewGetOutputUsingGETNoContent() *GetOutputUsingGETNoContent {
	return &GetOutputUsingGETNoContent{}
}

/* GetOutputUsingGETNoContent describes a response with status code 204, with default header values.

Filtered by report settings
*/
type GetOutputUsingGETNoContent struct {
	Payload strfmt.Base64
}

func (o *GetOutputUsingGETNoContent) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/output][%d] getOutputUsingGETNoContent  %+v", 204, o.Payload)
}
func (o *GetOutputUsingGETNoContent) GetPayload() strfmt.Base64 {
	return o.Payload
}

func (o *GetOutputUsingGETNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputUsingGETUnauthorized creates a GetOutputUsingGETUnauthorized with default headers values
func NewGetOutputUsingGETUnauthorized() *GetOutputUsingGETUnauthorized {
	return &GetOutputUsingGETUnauthorized{}
}

/* GetOutputUsingGETUnauthorized describes a response with status code 401, with default header values.

OAuth header is not declared or is wrong
*/
type GetOutputUsingGETUnauthorized struct {
}

func (o *GetOutputUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/output][%d] getOutputUsingGETUnauthorized ", 401)
}

func (o *GetOutputUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOutputUsingGETForbidden creates a GetOutputUsingGETForbidden with default headers values
func NewGetOutputUsingGETForbidden() *GetOutputUsingGETForbidden {
	return &GetOutputUsingGETForbidden{}
}

/* GetOutputUsingGETForbidden describes a response with status code 403, with default header values.

You don't have enough permissions
*/
type GetOutputUsingGETForbidden struct {
}

func (o *GetOutputUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/output][%d] getOutputUsingGETForbidden ", 403)
}

func (o *GetOutputUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOutputUsingGETNotFound creates a GetOutputUsingGETNotFound with default headers values
func NewGetOutputUsingGETNotFound() *GetOutputUsingGETNotFound {
	return &GetOutputUsingGETNotFound{}
}

/* GetOutputUsingGETNotFound describes a response with status code 404, with default header values.

Contest not found
*/
type GetOutputUsingGETNotFound struct {
}

func (o *GetOutputUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/output][%d] getOutputUsingGETNotFound ", 404)
}

func (o *GetOutputUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
