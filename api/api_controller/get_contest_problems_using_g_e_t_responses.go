// Code generated by go-swagger; DO NOT EDIT.

package api_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/teamdbnn/go-yandex-contest/models"
)

// GetContestProblemsUsingGETReader is a Reader for the GetContestProblemsUsingGET structure.
type GetContestProblemsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContestProblemsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContestProblemsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetContestProblemsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContestProblemsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContestProblemsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContestProblemsUsingGETOK creates a GetContestProblemsUsingGETOK with default headers values
func NewGetContestProblemsUsingGETOK() *GetContestProblemsUsingGETOK {
	return &GetContestProblemsUsingGETOK{}
}

/* GetContestProblemsUsingGETOK describes a response with status code 200, with default header values.

Successfully received contest's problems
*/
type GetContestProblemsUsingGETOK struct {
	Payload *models.ContestProblems
}

func (o *GetContestProblemsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/problems][%d] getContestProblemsUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetContestProblemsUsingGETOK) GetPayload() *models.ContestProblems {
	return o.Payload
}

func (o *GetContestProblemsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContestProblems)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContestProblemsUsingGETUnauthorized creates a GetContestProblemsUsingGETUnauthorized with default headers values
func NewGetContestProblemsUsingGETUnauthorized() *GetContestProblemsUsingGETUnauthorized {
	return &GetContestProblemsUsingGETUnauthorized{}
}

/* GetContestProblemsUsingGETUnauthorized describes a response with status code 401, with default header values.

OAuth header is not declared or is wrong
*/
type GetContestProblemsUsingGETUnauthorized struct {
}

func (o *GetContestProblemsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/problems][%d] getContestProblemsUsingGETUnauthorized ", 401)
}

func (o *GetContestProblemsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetContestProblemsUsingGETForbidden creates a GetContestProblemsUsingGETForbidden with default headers values
func NewGetContestProblemsUsingGETForbidden() *GetContestProblemsUsingGETForbidden {
	return &GetContestProblemsUsingGETForbidden{}
}

/* GetContestProblemsUsingGETForbidden describes a response with status code 403, with default header values.

You have no access to this contest
*/
type GetContestProblemsUsingGETForbidden struct {
}

func (o *GetContestProblemsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/problems][%d] getContestProblemsUsingGETForbidden ", 403)
}

func (o *GetContestProblemsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetContestProblemsUsingGETNotFound creates a GetContestProblemsUsingGETNotFound with default headers values
func NewGetContestProblemsUsingGETNotFound() *GetContestProblemsUsingGETNotFound {
	return &GetContestProblemsUsingGETNotFound{}
}

/* GetContestProblemsUsingGETNotFound describes a response with status code 404, with default header values.

Contest not found
*/
type GetContestProblemsUsingGETNotFound struct {
}

func (o *GetContestProblemsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/problems][%d] getContestProblemsUsingGETNotFound ", 404)
}

func (o *GetContestProblemsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
