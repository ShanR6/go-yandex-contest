// Code generated by go-swagger; DO NOT EDIT.

package api_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetFullAnswerUsingGETReader is a Reader for the GetFullAnswerUsingGET structure.
type GetFullAnswerUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFullAnswerUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFullAnswerUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetFullAnswerUsingGETNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetFullAnswerUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFullAnswerUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFullAnswerUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFullAnswerUsingGETOK creates a GetFullAnswerUsingGETOK with default headers values
func NewGetFullAnswerUsingGETOK() *GetFullAnswerUsingGETOK {
	return &GetFullAnswerUsingGETOK{}
}

/* GetFullAnswerUsingGETOK describes a response with status code 200, with default header values.

Successfully received full answer file
*/
type GetFullAnswerUsingGETOK struct {
	Payload strfmt.Base64
}

func (o *GetFullAnswerUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/answer][%d] getFullAnswerUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetFullAnswerUsingGETOK) GetPayload() strfmt.Base64 {
	return o.Payload
}

func (o *GetFullAnswerUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFullAnswerUsingGETNoContent creates a GetFullAnswerUsingGETNoContent with default headers values
func NewGetFullAnswerUsingGETNoContent() *GetFullAnswerUsingGETNoContent {
	return &GetFullAnswerUsingGETNoContent{}
}

/* GetFullAnswerUsingGETNoContent describes a response with status code 204, with default header values.

Filtered by report settings
*/
type GetFullAnswerUsingGETNoContent struct {
	Payload strfmt.Base64
}

func (o *GetFullAnswerUsingGETNoContent) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/answer][%d] getFullAnswerUsingGETNoContent  %+v", 204, o.Payload)
}
func (o *GetFullAnswerUsingGETNoContent) GetPayload() strfmt.Base64 {
	return o.Payload
}

func (o *GetFullAnswerUsingGETNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFullAnswerUsingGETUnauthorized creates a GetFullAnswerUsingGETUnauthorized with default headers values
func NewGetFullAnswerUsingGETUnauthorized() *GetFullAnswerUsingGETUnauthorized {
	return &GetFullAnswerUsingGETUnauthorized{}
}

/* GetFullAnswerUsingGETUnauthorized describes a response with status code 401, with default header values.

OAuth header is not declared or is wrong
*/
type GetFullAnswerUsingGETUnauthorized struct {
}

func (o *GetFullAnswerUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/answer][%d] getFullAnswerUsingGETUnauthorized ", 401)
}

func (o *GetFullAnswerUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFullAnswerUsingGETForbidden creates a GetFullAnswerUsingGETForbidden with default headers values
func NewGetFullAnswerUsingGETForbidden() *GetFullAnswerUsingGETForbidden {
	return &GetFullAnswerUsingGETForbidden{}
}

/* GetFullAnswerUsingGETForbidden describes a response with status code 403, with default header values.

You don't have enough permissions
*/
type GetFullAnswerUsingGETForbidden struct {
}

func (o *GetFullAnswerUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/answer][%d] getFullAnswerUsingGETForbidden ", 403)
}

func (o *GetFullAnswerUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFullAnswerUsingGETNotFound creates a GetFullAnswerUsingGETNotFound with default headers values
func NewGetFullAnswerUsingGETNotFound() *GetFullAnswerUsingGETNotFound {
	return &GetFullAnswerUsingGETNotFound{}
}

/* GetFullAnswerUsingGETNotFound describes a response with status code 404, with default header values.

Contest not found
*/
type GetFullAnswerUsingGETNotFound struct {
}

func (o *GetFullAnswerUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/answer][%d] getFullAnswerUsingGETNotFound ", 404)
}

func (o *GetFullAnswerUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
