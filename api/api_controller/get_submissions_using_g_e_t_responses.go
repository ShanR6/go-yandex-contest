// Code generated by go-swagger; DO NOT EDIT.

package api_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/teamdbnn/go-yandex-contest/models"
)

// GetSubmissionsUsingGETReader is a Reader for the GetSubmissionsUsingGET structure.
type GetSubmissionsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubmissionsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSubmissionsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSubmissionsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSubmissionsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSubmissionsUsingGETOK creates a GetSubmissionsUsingGETOK with default headers values
func NewGetSubmissionsUsingGETOK() *GetSubmissionsUsingGETOK {
	return &GetSubmissionsUsingGETOK{}
}

/* GetSubmissionsUsingGETOK describes a response with status code 200, with default header values.

Successfully received participant's submissions
*/
type GetSubmissionsUsingGETOK struct {
	Payload *models.Submissions
}

func (o *GetSubmissionsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions][%d] getSubmissionsUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetSubmissionsUsingGETOK) GetPayload() *models.Submissions {
	return o.Payload
}

func (o *GetSubmissionsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Submissions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubmissionsUsingGETUnauthorized creates a GetSubmissionsUsingGETUnauthorized with default headers values
func NewGetSubmissionsUsingGETUnauthorized() *GetSubmissionsUsingGETUnauthorized {
	return &GetSubmissionsUsingGETUnauthorized{}
}

/* GetSubmissionsUsingGETUnauthorized describes a response with status code 401, with default header values.

OAuth header is not declared or is wrong
*/
type GetSubmissionsUsingGETUnauthorized struct {
}

func (o *GetSubmissionsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions][%d] getSubmissionsUsingGETUnauthorized ", 401)
}

func (o *GetSubmissionsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSubmissionsUsingGETNotFound creates a GetSubmissionsUsingGETNotFound with default headers values
func NewGetSubmissionsUsingGETNotFound() *GetSubmissionsUsingGETNotFound {
	return &GetSubmissionsUsingGETNotFound{}
}

/* GetSubmissionsUsingGETNotFound describes a response with status code 404, with default header values.

Contest or your participation is not found
*/
type GetSubmissionsUsingGETNotFound struct {
}

func (o *GetSubmissionsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions][%d] getSubmissionsUsingGETNotFound ", 404)
}

func (o *GetSubmissionsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
