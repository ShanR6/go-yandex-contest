// Code generated by go-swagger; DO NOT EDIT.

package api_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/teamdbnn/go-yandex-contest/models"
)

// GetDetailedReportUsingGETReader is a Reader for the GetDetailedReportUsingGET structure.
type GetDetailedReportUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDetailedReportUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDetailedReportUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDetailedReportUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDetailedReportUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDetailedReportUsingGETOK creates a GetDetailedReportUsingGETOK with default headers values
func NewGetDetailedReportUsingGETOK() *GetDetailedReportUsingGETOK {
	return &GetDetailedReportUsingGETOK{}
}

/* GetDetailedReportUsingGETOK describes a response with status code 200, with default header values.

Successfully received detailed information
*/
type GetDetailedReportUsingGETOK struct {
	Payload *models.DetailedRunReport
}

func (o *GetDetailedReportUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}][%d] getDetailedReportUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetDetailedReportUsingGETOK) GetPayload() *models.DetailedRunReport {
	return o.Payload
}

func (o *GetDetailedReportUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DetailedRunReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDetailedReportUsingGETUnauthorized creates a GetDetailedReportUsingGETUnauthorized with default headers values
func NewGetDetailedReportUsingGETUnauthorized() *GetDetailedReportUsingGETUnauthorized {
	return &GetDetailedReportUsingGETUnauthorized{}
}

/* GetDetailedReportUsingGETUnauthorized describes a response with status code 401, with default header values.

OAuth header is not declared or is wrong
*/
type GetDetailedReportUsingGETUnauthorized struct {
}

func (o *GetDetailedReportUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}][%d] getDetailedReportUsingGETUnauthorized ", 401)
}

func (o *GetDetailedReportUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDetailedReportUsingGETNotFound creates a GetDetailedReportUsingGETNotFound with default headers values
func NewGetDetailedReportUsingGETNotFound() *GetDetailedReportUsingGETNotFound {
	return &GetDetailedReportUsingGETNotFound{}
}

/* GetDetailedReportUsingGETNotFound describes a response with status code 404, with default header values.

Contest or your participation is not found
*/
type GetDetailedReportUsingGETNotFound struct {
}

func (o *GetDetailedReportUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}][%d] getDetailedReportUsingGETNotFound ", 404)
}

func (o *GetDetailedReportUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
