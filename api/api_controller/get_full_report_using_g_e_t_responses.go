// Code generated by go-swagger; DO NOT EDIT.

package api_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/teamdbnn/go-yandex-contest/models"
)

// GetFullReportUsingGETReader is a Reader for the GetFullReportUsingGET structure.
type GetFullReportUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFullReportUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFullReportUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetFullReportUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFullReportUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFullReportUsingGETOK creates a GetFullReportUsingGETOK with default headers values
func NewGetFullReportUsingGETOK() *GetFullReportUsingGETOK {
	return &GetFullReportUsingGETOK{}
}

/* GetFullReportUsingGETOK describes a response with status code 200, with default header values.

Successfully received detailed information
*/
type GetFullReportUsingGETOK struct {
	Payload *models.FullRunReport
}

func (o *GetFullReportUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/full][%d] getFullReportUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetFullReportUsingGETOK) GetPayload() *models.FullRunReport {
	return o.Payload
}

func (o *GetFullReportUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FullRunReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFullReportUsingGETUnauthorized creates a GetFullReportUsingGETUnauthorized with default headers values
func NewGetFullReportUsingGETUnauthorized() *GetFullReportUsingGETUnauthorized {
	return &GetFullReportUsingGETUnauthorized{}
}

/* GetFullReportUsingGETUnauthorized describes a response with status code 401, with default header values.

OAuth header is not declared or is wrong
*/
type GetFullReportUsingGETUnauthorized struct {
}

func (o *GetFullReportUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/full][%d] getFullReportUsingGETUnauthorized ", 401)
}

func (o *GetFullReportUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFullReportUsingGETNotFound creates a GetFullReportUsingGETNotFound with default headers values
func NewGetFullReportUsingGETNotFound() *GetFullReportUsingGETNotFound {
	return &GetFullReportUsingGETNotFound{}
}

/* GetFullReportUsingGETNotFound describes a response with status code 404, with default header values.

Contest or your participation is not found
*/
type GetFullReportUsingGETNotFound struct {
}

func (o *GetFullReportUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/full][%d] getFullReportUsingGETNotFound ", 404)
}

func (o *GetFullReportUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
