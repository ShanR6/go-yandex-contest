// Code generated by go-swagger; DO NOT EDIT.

package api_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/teamdbnn/go-yandex-contest/models"
)

// GetContestInfoUsingGETReader is a Reader for the GetContestInfoUsingGET structure.
type GetContestInfoUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContestInfoUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContestInfoUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetContestInfoUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContestInfoUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContestInfoUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContestInfoUsingGETOK creates a GetContestInfoUsingGETOK with default headers values
func NewGetContestInfoUsingGETOK() *GetContestInfoUsingGETOK {
	return &GetContestInfoUsingGETOK{}
}

/* GetContestInfoUsingGETOK describes a response with status code 200, with default header values.

Successfully received information about contest
*/
type GetContestInfoUsingGETOK struct {
	Payload *models.ContestDescription
}

func (o *GetContestInfoUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}][%d] getContestInfoUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetContestInfoUsingGETOK) GetPayload() *models.ContestDescription {
	return o.Payload
}

func (o *GetContestInfoUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContestDescription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContestInfoUsingGETUnauthorized creates a GetContestInfoUsingGETUnauthorized with default headers values
func NewGetContestInfoUsingGETUnauthorized() *GetContestInfoUsingGETUnauthorized {
	return &GetContestInfoUsingGETUnauthorized{}
}

/* GetContestInfoUsingGETUnauthorized describes a response with status code 401, with default header values.

OAuth header is not declared or is wrong
*/
type GetContestInfoUsingGETUnauthorized struct {
}

func (o *GetContestInfoUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}][%d] getContestInfoUsingGETUnauthorized ", 401)
}

func (o *GetContestInfoUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetContestInfoUsingGETForbidden creates a GetContestInfoUsingGETForbidden with default headers values
func NewGetContestInfoUsingGETForbidden() *GetContestInfoUsingGETForbidden {
	return &GetContestInfoUsingGETForbidden{}
}

/* GetContestInfoUsingGETForbidden describes a response with status code 403, with default header values.

You have no access to this contest
*/
type GetContestInfoUsingGETForbidden struct {
}

func (o *GetContestInfoUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}][%d] getContestInfoUsingGETForbidden ", 403)
}

func (o *GetContestInfoUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetContestInfoUsingGETNotFound creates a GetContestInfoUsingGETNotFound with default headers values
func NewGetContestInfoUsingGETNotFound() *GetContestInfoUsingGETNotFound {
	return &GetContestInfoUsingGETNotFound{}
}

/* GetContestInfoUsingGETNotFound describes a response with status code 404, with default header values.

Contest not found
*/
type GetContestInfoUsingGETNotFound struct {
}

func (o *GetContestInfoUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}][%d] getContestInfoUsingGETNotFound ", 404)
}

func (o *GetContestInfoUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
