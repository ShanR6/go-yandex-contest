// Code generated by go-swagger; DO NOT EDIT.

package api_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/teamdbnn/go-yandex-contest/models"
)

// GetMyStandingsUsingGETReader is a Reader for the GetMyStandingsUsingGET structure.
type GetMyStandingsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMyStandingsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMyStandingsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMyStandingsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMyStandingsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMyStandingsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetMyStandingsUsingGETConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetMyStandingsUsingGETOK creates a GetMyStandingsUsingGETOK with default headers values
func NewGetMyStandingsUsingGETOK() *GetMyStandingsUsingGETOK {
	return &GetMyStandingsUsingGETOK{}
}

/* GetMyStandingsUsingGETOK describes a response with status code 200, with default header values.

Successfully received user's standings
*/
type GetMyStandingsUsingGETOK struct {
	Payload *models.ContestStandings
}

func (o *GetMyStandingsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/standings/my][%d] getMyStandingsUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetMyStandingsUsingGETOK) GetPayload() *models.ContestStandings {
	return o.Payload
}

func (o *GetMyStandingsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContestStandings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMyStandingsUsingGETUnauthorized creates a GetMyStandingsUsingGETUnauthorized with default headers values
func NewGetMyStandingsUsingGETUnauthorized() *GetMyStandingsUsingGETUnauthorized {
	return &GetMyStandingsUsingGETUnauthorized{}
}

/* GetMyStandingsUsingGETUnauthorized describes a response with status code 401, with default header values.

OAuth header is not declared or is wrong
*/
type GetMyStandingsUsingGETUnauthorized struct {
}

func (o *GetMyStandingsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/standings/my][%d] getMyStandingsUsingGETUnauthorized ", 401)
}

func (o *GetMyStandingsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMyStandingsUsingGETForbidden creates a GetMyStandingsUsingGETForbidden with default headers values
func NewGetMyStandingsUsingGETForbidden() *GetMyStandingsUsingGETForbidden {
	return &GetMyStandingsUsingGETForbidden{}
}

/* GetMyStandingsUsingGETForbidden describes a response with status code 403, with default header values.

You have no access to this contest
*/
type GetMyStandingsUsingGETForbidden struct {
}

func (o *GetMyStandingsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/standings/my][%d] getMyStandingsUsingGETForbidden ", 403)
}

func (o *GetMyStandingsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMyStandingsUsingGETNotFound creates a GetMyStandingsUsingGETNotFound with default headers values
func NewGetMyStandingsUsingGETNotFound() *GetMyStandingsUsingGETNotFound {
	return &GetMyStandingsUsingGETNotFound{}
}

/* GetMyStandingsUsingGETNotFound describes a response with status code 404, with default header values.

Contest not found
*/
type GetMyStandingsUsingGETNotFound struct {
}

func (o *GetMyStandingsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/standings/my][%d] getMyStandingsUsingGETNotFound ", 404)
}

func (o *GetMyStandingsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMyStandingsUsingGETConflict creates a GetMyStandingsUsingGETConflict with default headers values
func NewGetMyStandingsUsingGETConflict() *GetMyStandingsUsingGETConflict {
	return &GetMyStandingsUsingGETConflict{}
}

/* GetMyStandingsUsingGETConflict describes a response with status code 409, with default header values.

You are not a participant
*/
type GetMyStandingsUsingGETConflict struct {
}

func (o *GetMyStandingsUsingGETConflict) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/standings/my][%d] getMyStandingsUsingGETConflict ", 409)
}

func (o *GetMyStandingsUsingGETConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
