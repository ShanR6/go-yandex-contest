// Code generated by go-swagger; DO NOT EDIT.

package api_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetFullInputUsingGETReader is a Reader for the GetFullInputUsingGET structure.
type GetFullInputUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFullInputUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFullInputUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetFullInputUsingGETNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetFullInputUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFullInputUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFullInputUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFullInputUsingGETOK creates a GetFullInputUsingGETOK with default headers values
func NewGetFullInputUsingGETOK() *GetFullInputUsingGETOK {
	return &GetFullInputUsingGETOK{}
}

/* GetFullInputUsingGETOK describes a response with status code 200, with default header values.

Successfully received full input file
*/
type GetFullInputUsingGETOK struct {
	Payload strfmt.Base64
}

func (o *GetFullInputUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/input][%d] getFullInputUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetFullInputUsingGETOK) GetPayload() strfmt.Base64 {
	return o.Payload
}

func (o *GetFullInputUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFullInputUsingGETNoContent creates a GetFullInputUsingGETNoContent with default headers values
func NewGetFullInputUsingGETNoContent() *GetFullInputUsingGETNoContent {
	return &GetFullInputUsingGETNoContent{}
}

/* GetFullInputUsingGETNoContent describes a response with status code 204, with default header values.

Filtered by report settings
*/
type GetFullInputUsingGETNoContent struct {
	Payload strfmt.Base64
}

func (o *GetFullInputUsingGETNoContent) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/input][%d] getFullInputUsingGETNoContent  %+v", 204, o.Payload)
}
func (o *GetFullInputUsingGETNoContent) GetPayload() strfmt.Base64 {
	return o.Payload
}

func (o *GetFullInputUsingGETNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFullInputUsingGETUnauthorized creates a GetFullInputUsingGETUnauthorized with default headers values
func NewGetFullInputUsingGETUnauthorized() *GetFullInputUsingGETUnauthorized {
	return &GetFullInputUsingGETUnauthorized{}
}

/* GetFullInputUsingGETUnauthorized describes a response with status code 401, with default header values.

OAuth header is not declared or is wrong
*/
type GetFullInputUsingGETUnauthorized struct {
}

func (o *GetFullInputUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/input][%d] getFullInputUsingGETUnauthorized ", 401)
}

func (o *GetFullInputUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFullInputUsingGETForbidden creates a GetFullInputUsingGETForbidden with default headers values
func NewGetFullInputUsingGETForbidden() *GetFullInputUsingGETForbidden {
	return &GetFullInputUsingGETForbidden{}
}

/* GetFullInputUsingGETForbidden describes a response with status code 403, with default header values.

You don't have enough permissions
*/
type GetFullInputUsingGETForbidden struct {
}

func (o *GetFullInputUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/input][%d] getFullInputUsingGETForbidden ", 403)
}

func (o *GetFullInputUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFullInputUsingGETNotFound creates a GetFullInputUsingGETNotFound with default headers values
func NewGetFullInputUsingGETNotFound() *GetFullInputUsingGETNotFound {
	return &GetFullInputUsingGETNotFound{}
}

/* GetFullInputUsingGETNotFound describes a response with status code 404, with default header values.

Contest not found
*/
type GetFullInputUsingGETNotFound struct {
}

func (o *GetFullInputUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /contests/{contestId}/submissions/{runId}/{testName}/input][%d] getFullInputUsingGETNotFound ", 404)
}

func (o *GetFullInputUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
